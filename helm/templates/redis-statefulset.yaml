{{- if .Values.redis.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.redis.name }}
  namespace: {{ .Values.namespace.name }}
  labels:
    app: {{ .Values.redis.name }}
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  serviceName: {{ .Values.redis.name }}-service
  replicas: {{ .Values.redis.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.redis.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.redis.name }}
    spec:
      containers:
      - name: redis
        image: {{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}
        ports:
        - containerPort: {{ .Values.redis.port }}
          name: redis
        resources:
          limits:
            cpu: {{ .Values.redis.resources.limits.cpu }}
            memory: {{ .Values.redis.resources.limits.memory }}
          requests:
            cpu: {{ .Values.redis.resources.requests.cpu }}
            memory: {{ .Values.redis.resources.requests.memory }}
        {{- if .Values.redis.persistence.enabled }}
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config
          mountPath: /usr/local/etc/redis
        {{- end }}
        command:
          - redis-server
          - /usr/local/etc/redis/redis.conf
        livenessProbe:
          tcpSocket:
            port: {{ .Values.redis.port }}
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      {{- if .Values.redis.persistence.enabled }}
      - name: redis-data
        persistentVolumeClaim:
          claimName: {{ .Values.redis.name }}-pvc
      {{- end }}
      - name: redis-config
        configMap:
          name: {{ .Values.redis.name }}-config
{{- end }}
